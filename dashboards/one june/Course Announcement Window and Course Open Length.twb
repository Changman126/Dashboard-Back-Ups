<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.17.0201.1840                                -->
<workbook source-build='9.3.13 (9300.17.0201.1840)' source-platform='win' version='9.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='9.3'>
      <aliases enabled='yes' />
      <column caption='Time Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Weeks&quot;'>
        <calculation class='tableau' formula='&quot;Weeks&quot;' />
        <members>
          <member value='&quot;Days&quot;' />
          <member value='&quot;Weeks&quot;' />
          <member value='&quot;Months&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Announcement Window' inline='true' name='vertica.0u69qg00zc39cf1ds1htn1n2e5rb' version='9.3'>
      <connection class='vertica' dbname='warehouse' odbc-connect-string-extras='' odbc-native-protocol='yes' one-time-sql='' port='5433' schema='business_intelligence' server='10.5.3.246' username='ojchang'>
        <relation name='custom_sql_query' type='text'>SELECT&#13;&#10;&#9;a.course_id,&#13;&#10;&#9;DATEDIFF(day, course_announcement_date, course_start_date) AS days_announcement_window,&#13;&#10;        DATEDIFF(week, course_announcement_date, course_start_date) AS weeks_announcement_window,&#13;&#10;        DATEDIFF(month, course_announcement_date, course_start_date) AS months_announcement_window,&#13;&#10;&#9;pacing_type,&#13;&#10;&#9;level_type,&#13;&#10;        course_partner,&#13;&#10;        course_run_number,&#13;&#10;&#9;sum_enrolls,&#13;&#10;        b.sum_bookings,&#13;&#10;        cum_sum_enrolls AS enrollments_at_start,&#13;&#10;        sum_enrolls - cum_sum_enrolls AS enrollments_after_start,&#13;&#10;   &#9;cum_sum_enrolls/sum_enrolls AS pct_enroll_at_start&#13;&#10;FROM&#13;&#10;&#9;business_intelligence.course_master a&#13;&#10;LEFT JOIN&#13;&#10;&#9;business_intelligence.course_stats_summary b&#13;&#10;ON&#13;&#10;&#9;a.course_id = b.course_id&#13;&#10;LEFT JOIN&#13;&#10;&#9;business_intelligence.course_stats_time c&#13;&#10;ON&#13;&#10;&#9;a.course_id = c.course_id&#13;&#10;AND&#13;&#10;&#9;a.course_start_date = c.date&#13;&#10;WHERE&#13;&#10;&#9;course_start_date IS NOT NULL&#13;&#10;AND&#13;&#10;&#9;course_announcement_date IS NOT NULL&#13;&#10;AND&#13;&#10;&#9;DATEDIFF(day, course_announcement_date, course_start_date)&gt;&gt;=0&#13;&#10;AND&#13;&#10;&#9;sum_enrolls &gt;&gt; 100</relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>course_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[course_id]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>course_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>days_announcement_window</remote-name>
            <remote-type>20</remote-type>
            <local-name>[days_announcement_window]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>days_announcement_window</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weeks_announcement_window</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weeks_announcement_window]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>weeks_announcement_window</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>months_announcement_window</remote-name>
            <remote-type>20</remote-type>
            <local-name>[months_announcement_window]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>months_announcement_window</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pacing_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[pacing_type]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>pacing_type</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>level_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[level_type]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>level_type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>course_partner</remote-name>
            <remote-type>130</remote-type>
            <local-name>[course_partner]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>course_partner</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>course_run_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[course_run_number]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>course_run_number</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sum_enrolls</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sum_enrolls]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>sum_enrolls</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sum_bookings</remote-name>
            <remote-type>131</remote-type>
            <local-name>[sum_bookings]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>sum_bookings</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>12</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>enrollments_at_start</remote-name>
            <remote-type>20</remote-type>
            <local-name>[enrollments_at_start]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>enrollments_at_start</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>enrollments_after_start</remote-name>
            <remote-type>20</remote-type>
            <local-name>[enrollments_after_start]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>enrollments_after_start</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pct_enroll_at_start</remote-name>
            <remote-type>131</remote-type>
            <local-name>[pct_enroll_at_start]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>pct_enroll_at_start</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>36</precision>
            <scale>18</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Announcement Window' datatype='integer' name='[Calculation_249386846820065280]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Days&quot; THEN SUM([days_announcement_window])&#13;&#10;WHEN &quot;Weeks&quot; THEN SUM([weeks_announcement_window])&#13;&#10;WHEN &quot;Months&quot; THEN SUM([months_announcement_window])&#13;&#10;END)' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[level_type]' role='dimension' type='nominal' />
      <column datatype='string' name='[pacing_type]' role='dimension' type='nominal' />
      <column-instance column='[level_type]' derivation='None' name='[none:level_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[pacing_type]' derivation='None' name='[none:pacing_type:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.300429' measure-ordering='alphabetic' measure-percentage='0.522175' parameter-percentage='0.177396' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:pacing_type:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;instructor_paced&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;self_paced&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:pacing_type:nk]' type='shape'>
            <map to='circle'>
              <bucket>&quot;instructor_paced&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;self_paced&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:level_type:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Intermediate&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Introductory&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Advanced&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Time Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Weeks&quot;'>
          <calculation class='tableau' formula='&quot;Weeks&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='Course Open Length' inline='true' name='vertica.08yenws10g77kn1asndxm1nlvam5' version='9.3'>
      <connection class='vertica' dbname='warehouse' odbc-connect-string-extras='' odbc-native-protocol='yes' one-time-sql='' port='5433' schema='business_intelligence' server='10.5.3.246' username='ojchang'>
        <relation name='custom_sql_query' type='text'>SELECT&#13;&#10;&#9;a.course_id,&#13;&#10;&#9;DATEDIFF(day, course_start_date, course_end_date) AS days_course_open_length,&#13;&#10;&#9;DATEDIFF(week, course_start_date, course_end_date) AS weeks_course_open_length,&#13;&#10;&#9;DATEDIFF(month, course_start_date, course_end_date) AS months_course_open_length,&#13;&#10;&#9;pacing_type,&#13;&#10;&#9;level_type,&#13;&#10;        course_partner,&#13;&#10;        course_run_number,&#13;&#10;&#9;sum_enrolls,&#13;&#10;        b.sum_bookings,&#13;&#10;        cum_sum_enrolls AS enrollments_at_start,&#13;&#10;        sum_enrolls - cum_sum_enrolls AS enrollments_after_start,&#13;&#10;   &#9;cum_sum_enrolls/sum_enrolls AS pct_enroll_at_start&#13;&#10;FROM&#13;&#10;&#9;business_intelligence.course_master a&#13;&#10;LEFT JOIN&#13;&#10;&#9;business_intelligence.course_stats_summary b&#13;&#10;ON&#13;&#10;&#9;a.course_id = b.course_id&#13;&#10;LEFT JOIN&#13;&#10;&#9;business_intelligence.course_stats_time c&#13;&#10;ON&#13;&#10;&#9;a.course_id = c.course_id&#13;&#10;AND&#13;&#10;&#9;a.course_start_date = c.date&#13;&#10;WHERE&#13;&#10;&#9;course_start_date IS NOT NULL&#13;&#10;AND&#13;&#10;&#9;course_end_date IS NOT NULL&#13;&#10;AND&#13;&#10;&#9;DATEDIFF(day, course_start_date, course_end_date)&gt;&gt;=0&#13;&#10;AND&#13;&#10;&#9;sum_enrolls &gt;&gt; 100</relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>course_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[course_id]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>course_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>days_course_open_length</remote-name>
            <remote-type>20</remote-type>
            <local-name>[days_course_open_length]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>days_course_open_length</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weeks_course_open_length</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weeks_course_open_length]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>weeks_course_open_length</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>months_course_open_length</remote-name>
            <remote-type>20</remote-type>
            <local-name>[months_course_open_length]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>months_course_open_length</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pacing_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[pacing_type]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>pacing_type</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>level_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[level_type]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>level_type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>course_partner</remote-name>
            <remote-type>130</remote-type>
            <local-name>[course_partner]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>course_partner</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>course_run_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[course_run_number]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>course_run_number</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sum_enrolls</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sum_enrolls]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>sum_enrolls</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sum_bookings</remote-name>
            <remote-type>131</remote-type>
            <local-name>[sum_bookings]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>sum_bookings</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>12</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>enrollments_at_start</remote-name>
            <remote-type>20</remote-type>
            <local-name>[enrollments_at_start]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>enrollments_at_start</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>enrollments_after_start</remote-name>
            <remote-type>20</remote-type>
            <local-name>[enrollments_after_start]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>enrollments_after_start</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pct_enroll_at_start</remote-name>
            <remote-type>131</remote-type>
            <local-name>[pct_enroll_at_start]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>pct_enroll_at_start</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>36</precision>
            <scale>18</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Parameter_Time' datatype='integer' name='[Calculation_249386846820065280]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Days&quot; THEN SUM([days_course_open_length])&#13;&#10;WHEN &quot;Weeks&quot; THEN SUM([weeks_course_open_length])&#13;&#10;WHEN &quot;Months&quot; THEN SUM([months_course_open_length])&#13;&#10;END)' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[course_run_number]' role='dimension' type='ordinal' />
      <column datatype='string' name='[level_type]' role='dimension' type='nominal' />
      <column-instance column='[level_type]' derivation='None' name='[none:level_type:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.48927' parameter-percentage='0.177396' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:level_type:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Intermediate&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Introductory&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Advanced&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Time Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Weeks&quot;'>
          <calculation class='tableau' formula='&quot;Weeks&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='Added Registrations' inline='true' name='vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz' version='9.3'>
      <connection class='vertica' dbname='warehouse' odbc-connect-string-extras='' odbc-native-protocol='yes' one-time-sql='' port='5433' schema='business_intelligence' server='10.5.3.246' username='ojchang'>
        <relation name='custom_sql_query' type='text'>SELECT&#13;&#10;    a.course_id,&#13;&#10;    DATEDIFF(week, course_start_date, course_end_date) AS course_open_length,&#13;&#10;    DATEDIFF(day, course_start_date, course_verification_end_date) AS verification_window,&#13;&#10;    pacing_type,&#13;&#10;    level_type,&#13;&#10;    course_partner,&#13;&#10;    course_run_number,&#13;&#10;    sum_enrolls,&#13;&#10;    b.sum_bookings,&#13;&#10;    cnt_registrations,&#13;&#10;    c.cum_sum_enrolls AS enrollments_at_start,&#13;&#10;    sum_enrolls - c.cum_sum_enrolls AS enrollments_after_start,&#13;&#10;    c.cum_sum_enrolls/sum_enrolls AS pct_enroll_at_start,&#13;&#10;    b.sum_verifications&#13;&#10;FROM&#13;&#10;&#9;business_intelligence.course_master a&#13;&#10;LEFT JOIN&#13;&#10;&#9;business_intelligence.course_stats_summary b&#13;&#10;ON&#13;&#10;&#9;a.course_id = b.course_id&#13;&#10;LEFT JOIN&#13;&#10;&#9;business_intelligence.course_stats_time c&#13;&#10;ON&#13;&#10;&#9;a.course_id = c.course_id&#13;&#10;AND&#13;&#10;&#9;a.course_start_date = c.date&#13;&#10;LEFT JOIN&#13;&#10;&#9;business_intelligence.daily_stats d&#13;&#10;ON&#13;&#10;&#9;a.course_start_date = d.date&#13;&#10;WHERE&#13;&#10;&#9;course_start_date IS NOT NULL&#13;&#10;AND&#13;&#10;&#9;course_end_date IS NOT NULL&#13;&#10;AND&#13;&#10;&#9;DATEDIFF(day, course_start_date, course_end_date)&gt;&gt;0&#13;&#10;AND&#13;&#10;&#9;sum_enrolls &gt;&gt; 100&#13;&#10;AND&#13;&#10;        DATEDIFF(day, course_start_date, course_verification_end_date)&gt;&gt;0</relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>course_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[course_id]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>course_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>course_open_length</remote-name>
            <remote-type>20</remote-type>
            <local-name>[course_open_length]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>course_open_length</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>verification_window</remote-name>
            <remote-type>20</remote-type>
            <local-name>[verification_window]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>verification_window</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pacing_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[pacing_type]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>pacing_type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>level_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[level_type]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>level_type</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>course_partner</remote-name>
            <remote-type>130</remote-type>
            <local-name>[course_partner]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>course_partner</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>course_run_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[course_run_number]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>course_run_number</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sum_enrolls</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sum_enrolls]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>sum_enrolls</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sum_bookings</remote-name>
            <remote-type>131</remote-type>
            <local-name>[sum_bookings]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>sum_bookings</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>12</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cnt_registrations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cnt_registrations]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>cnt_registrations</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>enrollments_at_start</remote-name>
            <remote-type>20</remote-type>
            <local-name>[enrollments_at_start]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>enrollments_at_start</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>enrollments_after_start</remote-name>
            <remote-type>20</remote-type>
            <local-name>[enrollments_after_start]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>enrollments_after_start</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pct_enroll_at_start</remote-name>
            <remote-type>131</remote-type>
            <local-name>[pct_enroll_at_start]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>pct_enroll_at_start</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>36</precision>
            <scale>18</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sum_verifications</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sum_verifications]</local-name>
            <parent-name>[custom_sql_query]</parent-name>
            <remote-alias>sum_verifications</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[level_type]' role='dimension' type='nominal' />
      <column-instance column='[level_type]' derivation='None' name='[none:level_type:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.30186' measure-ordering='alphabetic' measure-percentage='0.520744' parameter-percentage='0.177396' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:level_type:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Intermediate&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Introductory&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Advanced&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Announcement Window'>
      <table>
        <view>
          <datasources>
            <datasource caption='Announcement Window' name='vertica.0u69qg00zc39cf1ds1htn1n2e5rb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Time Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Weeks&quot;'>
              <calculation class='tableau' formula='&quot;Weeks&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.0u69qg00zc39cf1ds1htn1n2e5rb'>
            <column caption='Announcement Window' datatype='integer' name='[Calculation_249386846820065280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Days&quot; THEN SUM([days_announcement_window])&#13;&#10;WHEN &quot;Weeks&quot; THEN SUM([weeks_announcement_window])&#13;&#10;WHEN &quot;Months&quot; THEN SUM([months_announcement_window])&#13;&#10;END)' />
            </column>
            <column datatype='string' name='[course_id]' role='dimension' type='nominal' />
            <column datatype='string' name='[course_partner]' role='dimension' type='nominal' />
            <column datatype='integer' name='[days_announcement_window]' role='measure' type='quantitative' />
            <column datatype='string' name='[level_type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[months_announcement_window]' role='measure' type='quantitative' />
            <column-instance column='[course_id]' derivation='None' name='[none:course_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[course_partner]' derivation='None' name='[none:course_partner:nk]' pivot='key' type='nominal' />
            <column-instance column='[level_type]' derivation='None' name='[none:level_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[pacing_type]' derivation='None' name='[none:pacing_type:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[pacing_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_249386846820065280]' derivation='User' name='[usr:Calculation_249386846820065280:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[weeks_announcement_window]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:course_partner:nk]'>
            <groupfilter function='level-members' level='[none:course_partner:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:level_type:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:level_type:nk]' member='&quot;Advanced&quot;' />
              <groupfilter function='member' level='[none:level_type:nk]' member='&quot;Intermediate&quot;' />
              <groupfilter function='member' level='[none:level_type:nk]' member='&quot;Introductory&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:level_type:nk]</column>
            <column>[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:course_partner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:level_type:nk]' value='115' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:level_type:nk]' />
              <lod column='[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:course_id:nk]' />
            </encodings>
            <reference-line axis-column='[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[usr:Calculation_249386846820065280:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[usr:Calculation_249386846820065280:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[usr:Calculation_249386846820065280:qk]</rows>
        <cols>([vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:pacing_type:nk] / [vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:level_type:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Announcement Window to Enrolls'>
      <table>
        <view>
          <datasources>
            <datasource caption='Announcement Window' name='vertica.0u69qg00zc39cf1ds1htn1n2e5rb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Time Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Weeks&quot;'>
              <calculation class='tableau' formula='&quot;Weeks&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.0u69qg00zc39cf1ds1htn1n2e5rb'>
            <column caption='Announcement Window' datatype='integer' name='[Calculation_249386846820065280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Days&quot; THEN SUM([days_announcement_window])&#13;&#10;WHEN &quot;Weeks&quot; THEN SUM([weeks_announcement_window])&#13;&#10;WHEN &quot;Months&quot; THEN SUM([months_announcement_window])&#13;&#10;END)' />
            </column>
            <column datatype='string' name='[course_id]' role='dimension' type='nominal' />
            <column datatype='integer' name='[days_announcement_window]' role='measure' type='quantitative' />
            <column datatype='string' name='[level_type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[months_announcement_window]' role='measure' type='quantitative' />
            <column-instance column='[course_id]' derivation='None' name='[none:course_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[level_type]' derivation='None' name='[none:level_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[pacing_type]' derivation='None' name='[none:pacing_type:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[pacing_type]' role='dimension' type='nominal' />
            <column-instance column='[sum_enrolls]' derivation='Sum' name='[sum:sum_enrolls:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[sum_enrolls]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_249386846820065280]' derivation='User' name='[usr:Calculation_249386846820065280:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[weeks_announcement_window]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:level_type:nk]'>
            <groupfilter function='level-members' level='[none:level_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:pacing_type:nk]'>
            <groupfilter function='level-members' level='[none:pacing_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:pacing_type:nk]</column>
            <column>[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:level_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:level_type:nk]' />
              <shape column='[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:pacing_type:nk]' />
              <lod column='[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:course_id:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[sum:sum_enrolls:qk]</rows>
        <cols>[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[usr:Calculation_249386846820065280:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Course Open Length'>
      <table>
        <view>
          <datasources>
            <datasource caption='Course Open Length' name='vertica.08yenws10g77kn1asndxm1nlvam5' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Time Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Weeks&quot;'>
              <calculation class='tableau' formula='&quot;Weeks&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.08yenws10g77kn1asndxm1nlvam5'>
            <column caption='Parameter_Time' datatype='integer' name='[Calculation_249386846820065280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Days&quot; THEN SUM([days_course_open_length])&#13;&#10;WHEN &quot;Weeks&quot; THEN SUM([weeks_course_open_length])&#13;&#10;WHEN &quot;Months&quot; THEN SUM([months_course_open_length])&#13;&#10;END)' />
            </column>
            <column datatype='string' name='[course_id]' role='dimension' type='nominal' />
            <column datatype='string' name='[course_partner]' role='dimension' type='nominal' />
            <column datatype='integer' name='[days_course_open_length]' role='measure' type='quantitative' />
            <column datatype='string' name='[level_type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[months_course_open_length]' role='measure' type='quantitative' />
            <column-instance column='[course_id]' derivation='None' name='[none:course_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[course_partner]' derivation='None' name='[none:course_partner:nk]' pivot='key' type='nominal' />
            <column-instance column='[level_type]' derivation='None' name='[none:level_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[pacing_type]' derivation='None' name='[none:pacing_type:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[pacing_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_249386846820065280]' derivation='User' name='[usr:Calculation_249386846820065280:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[weeks_course_open_length]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.08yenws10g77kn1asndxm1nlvam5].[none:course_partner:nk]'>
            <groupfilter from='&quot;ACCA&quot;' function='range' level='[none:course_partner:nk]' to='&quot;edX&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.08yenws10g77kn1asndxm1nlvam5].[none:level_type:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:level_type:nk]' member='&quot;Advanced&quot;' />
              <groupfilter function='member' level='[none:level_type:nk]' member='&quot;Intermediate&quot;' />
              <groupfilter function='member' level='[none:level_type:nk]' member='&quot;Introductory&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[vertica.08yenws10g77kn1asndxm1nlvam5].[none:level_type:nk]</column>
            <column>[vertica.08yenws10g77kn1asndxm1nlvam5].[none:course_partner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[vertica.08yenws10g77kn1asndxm1nlvam5].[usr:Calculation_249386846820065280:qk]' field-type='quantitative' max='150' min='0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[vertica.08yenws10g77kn1asndxm1nlvam5].[usr:Calculation_249386846820065280:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.08yenws10g77kn1asndxm1nlvam5].[usr:Calculation_249386846820065280:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.08yenws10g77kn1asndxm1nlvam5].[none:level_type:nk]' value='129' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[vertica.08yenws10g77kn1asndxm1nlvam5].[none:level_type:nk]' />
              <lod column='[vertica.08yenws10g77kn1asndxm1nlvam5].[none:course_id:nk]' />
            </encodings>
            <reference-line axis-column='[vertica.08yenws10g77kn1asndxm1nlvam5].[usr:Calculation_249386846820065280:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[vertica.08yenws10g77kn1asndxm1nlvam5].[usr:Calculation_249386846820065280:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.08yenws10g77kn1asndxm1nlvam5].[usr:Calculation_249386846820065280:qk]</rows>
        <cols>([vertica.08yenws10g77kn1asndxm1nlvam5].[none:pacing_type:nk] / [vertica.08yenws10g77kn1asndxm1nlvam5].[none:level_type:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Course Open Length to Enrolls'>
      <table>
        <view>
          <datasources>
            <datasource caption='Course Open Length' name='vertica.08yenws10g77kn1asndxm1nlvam5' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Time Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Weeks&quot;'>
              <calculation class='tableau' formula='&quot;Weeks&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.08yenws10g77kn1asndxm1nlvam5'>
            <column caption='Parameter_Time' datatype='integer' name='[Calculation_249386846820065280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Days&quot; THEN SUM([days_course_open_length])&#13;&#10;WHEN &quot;Weeks&quot; THEN SUM([weeks_course_open_length])&#13;&#10;WHEN &quot;Months&quot; THEN SUM([months_course_open_length])&#13;&#10;END)' />
            </column>
            <column datatype='string' name='[course_id]' role='dimension' type='nominal' />
            <column datatype='integer' name='[days_course_open_length]' role='measure' type='quantitative' />
            <column datatype='string' name='[level_type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[months_course_open_length]' role='measure' type='quantitative' />
            <column-instance column='[course_id]' derivation='None' name='[none:course_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[level_type]' derivation='None' name='[none:level_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[pacing_type]' derivation='None' name='[none:pacing_type:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[pacing_type]' role='dimension' type='nominal' />
            <column-instance column='[sum_enrolls]' derivation='Sum' name='[sum:sum_enrolls:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[sum_enrolls]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_249386846820065280]' derivation='User' name='[usr:Calculation_249386846820065280:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[weeks_course_open_length]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.08yenws10g77kn1asndxm1nlvam5].[none:level_type:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:level_type:nk]' member='%null%' />
              <groupfilter function='member' level='[none:level_type:nk]' member='&quot;Advanced&quot;' />
              <groupfilter function='member' level='[none:level_type:nk]' member='&quot;Intermediate&quot;' />
              <groupfilter function='member' level='[none:level_type:nk]' member='&quot;Introductory&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[vertica.08yenws10g77kn1asndxm1nlvam5].[none:pacing_type:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:pacing_type:nk]' member='&quot;instructor_paced&quot;' />
              <groupfilter function='member' level='[none:pacing_type:nk]' member='&quot;self_paced&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[vertica.08yenws10g77kn1asndxm1nlvam5].[none:pacing_type:nk]</column>
            <column>[vertica.08yenws10g77kn1asndxm1nlvam5].[none:level_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[vertica.08yenws10g77kn1asndxm1nlvam5].[usr:Calculation_249386846820065280:qk]' field-type='quantitative' max='730' min='0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[vertica.08yenws10g77kn1asndxm1nlvam5].[usr:Calculation_249386846820065280:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.08yenws10g77kn1asndxm1nlvam5].[usr:Calculation_249386846820065280:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[vertica.08yenws10g77kn1asndxm1nlvam5].[none:level_type:nk]' />
              <shape column='[vertica.08yenws10g77kn1asndxm1nlvam5].[none:pacing_type:nk]' />
              <lod column='[vertica.08yenws10g77kn1asndxm1nlvam5].[none:course_id:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[vertica.08yenws10g77kn1asndxm1nlvam5].[sum:sum_enrolls:qk]</rows>
        <cols>[vertica.08yenws10g77kn1asndxm1nlvam5].[usr:Calculation_249386846820065280:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Course Verification Window'>
      <table>
        <view>
          <datasources>
            <datasource caption='Added Registrations' name='vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz' />
          </datasources>
          <datasource-dependencies datasource='vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz'>
            <column datatype='string' name='[course_id]' role='dimension' type='nominal' />
            <column datatype='string' name='[level_type]' role='dimension' type='nominal' />
            <column-instance column='[course_id]' derivation='None' name='[none:course_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[level_type]' derivation='None' name='[none:level_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[pacing_type]' derivation='None' name='[none:pacing_type:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[pacing_type]' role='dimension' type='nominal' />
            <column-instance column='[verification_window]' derivation='Sum' name='[sum:verification_window:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[verification_window]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:level_type:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:level_type:nk]' />
              <groupfilter function='member' level='[none:level_type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:level_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[sum:verification_window:qk]' field-type='quantitative' max='1000' min='0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[sum:verification_window:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[sum:verification_window:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:pacing_type:nk]' value='462' />
            <format attr='width' field='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:level_type:nk]' value='124' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:course_id:nk]' />
            </encodings>
            <reference-line axis-column='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[sum:verification_window:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[sum:verification_window:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.07596684992313385' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[sum:verification_window:qk]</rows>
        <cols>([vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:pacing_type:nk] / [vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:level_type:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Descriptive Stats'>
      <table>
        <view>
          <datasources>
            <datasource caption='Announcement Window' name='vertica.0u69qg00zc39cf1ds1htn1n2e5rb' />
          </datasources>
          <datasource-dependencies datasource='vertica.0u69qg00zc39cf1ds1htn1n2e5rb'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[days_announcement_window]' derivation='Avg' name='[avg:days_announcement_window:qk]' pivot='key' type='quantitative' />
            <column-instance column='[months_announcement_window]' derivation='Avg' name='[avg:months_announcement_window:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pct_enroll_at_start]' derivation='Avg' name='[avg:pct_enroll_at_start:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weeks_announcement_window]' derivation='Avg' name='[avg:weeks_announcement_window:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[course_partner]' role='dimension' type='nominal' />
            <column datatype='integer' name='[days_announcement_window]' role='measure' type='quantitative' />
            <column datatype='integer' name='[enrollments_after_start]' role='measure' type='quantitative' />
            <column datatype='integer' name='[enrollments_at_start]' role='measure' type='quantitative' />
            <column datatype='string' name='[level_type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[months_announcement_window]' role='measure' type='quantitative' />
            <column-instance column='[course_partner]' derivation='None' name='[none:course_partner:nk]' pivot='key' type='nominal' />
            <column-instance column='[level_type]' derivation='None' name='[none:level_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[pacing_type]' derivation='None' name='[none:pacing_type:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[pacing_type]' role='dimension' type='nominal' />
            <column datatype='real' name='[pct_enroll_at_start]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[enrollments_after_start]' derivation='Sum' name='[sum:enrollments_after_start:qk]' pivot='key' type='quantitative' />
            <column-instance column='[enrollments_at_start]' derivation='Sum' name='[sum:enrollments_at_start:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sum_enrolls]' derivation='Sum' name='[sum:sum_enrolls:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[sum_enrolls]' role='measure' type='quantitative' />
            <column datatype='integer' name='[weeks_announcement_window]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[sum:Number of Records:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[avg:days_announcement_window:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[avg:weeks_announcement_window:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[avg:months_announcement_window:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[sum:enrollments_at_start:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[sum:enrollments_after_start:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[sum:sum_enrolls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[avg:pct_enroll_at_start:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[sum:Number of Records:qk]&quot;</bucket>
              <bucket>&quot;[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[avg:days_announcement_window:qk]&quot;</bucket>
              <bucket>&quot;[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[avg:weeks_announcement_window:qk]&quot;</bucket>
              <bucket>&quot;[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[avg:months_announcement_window:qk]&quot;</bucket>
              <bucket>&quot;[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[sum:enrollments_at_start:qk]&quot;</bucket>
              <bucket>&quot;[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[sum:enrollments_after_start:qk]&quot;</bucket>
              <bucket>&quot;[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[sum:sum_enrolls:qk]&quot;</bucket>
              <bucket>&quot;[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[avg:pct_enroll_at_start:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:course_partner:nk]'>
            <groupfilter from='&quot;ACCA&quot;' function='range' level='[none:course_partner:nk]' to='&quot;tennessee&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:level_type:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:level_type:nk]' member='&quot;Advanced&quot;' />
              <groupfilter function='member' level='[none:level_type:nk]' member='&quot;Intermediate&quot;' />
              <groupfilter function='member' level='[none:level_type:nk]' member='&quot;Introductory&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:course_partner:nk]</column>
            <column>[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:level_type:nk]</column>
            <column>[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[:Measure Names]' value='187' />
            <format attr='text-format' field='[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[avg:pct_enroll_at_start:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:pacing_type:nk] / [vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:level_type:nk])</rows>
        <cols>[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[:Measure Names]</cols>
        <subtotals>
          <column>[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:pacing_type:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Descriptive Stats 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Course Open Length' name='vertica.08yenws10g77kn1asndxm1nlvam5' />
          </datasources>
          <datasource-dependencies datasource='vertica.08yenws10g77kn1asndxm1nlvam5'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[days_course_open_length]' derivation='Avg' name='[avg:days_course_open_length:qk]' pivot='key' type='quantitative' />
            <column-instance column='[months_course_open_length]' derivation='Avg' name='[avg:months_course_open_length:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pct_enroll_at_start]' derivation='Avg' name='[avg:pct_enroll_at_start:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weeks_course_open_length]' derivation='Avg' name='[avg:weeks_course_open_length:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[days_course_open_length]' role='measure' type='quantitative' />
            <column datatype='integer' name='[enrollments_after_start]' role='measure' type='quantitative' />
            <column datatype='integer' name='[enrollments_at_start]' role='measure' type='quantitative' />
            <column datatype='string' name='[level_type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[months_course_open_length]' role='measure' type='quantitative' />
            <column-instance column='[level_type]' derivation='None' name='[none:level_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[pacing_type]' derivation='None' name='[none:pacing_type:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[pacing_type]' role='dimension' type='nominal' />
            <column datatype='real' name='[pct_enroll_at_start]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[enrollments_after_start]' derivation='Sum' name='[sum:enrollments_after_start:qk]' pivot='key' type='quantitative' />
            <column-instance column='[enrollments_at_start]' derivation='Sum' name='[sum:enrollments_at_start:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sum_enrolls]' derivation='Sum' name='[sum:sum_enrolls:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[sum_enrolls]' role='measure' type='quantitative' />
            <column datatype='integer' name='[weeks_course_open_length]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.08yenws10g77kn1asndxm1nlvam5].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.08yenws10g77kn1asndxm1nlvam5].[sum:Number of Records:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.08yenws10g77kn1asndxm1nlvam5].[avg:days_course_open_length:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.08yenws10g77kn1asndxm1nlvam5].[avg:months_course_open_length:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.08yenws10g77kn1asndxm1nlvam5].[avg:weeks_course_open_length:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.08yenws10g77kn1asndxm1nlvam5].[sum:enrollments_after_start:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.08yenws10g77kn1asndxm1nlvam5].[sum:enrollments_at_start:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.08yenws10g77kn1asndxm1nlvam5].[sum:sum_enrolls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.08yenws10g77kn1asndxm1nlvam5].[avg:pct_enroll_at_start:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.08yenws10g77kn1asndxm1nlvam5].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.08yenws10g77kn1asndxm1nlvam5].[sum:Number of Records:qk]&quot;</bucket>
              <bucket>&quot;[vertica.08yenws10g77kn1asndxm1nlvam5].[avg:days_course_open_length:qk]&quot;</bucket>
              <bucket>&quot;[vertica.08yenws10g77kn1asndxm1nlvam5].[avg:months_course_open_length:qk]&quot;</bucket>
              <bucket>&quot;[vertica.08yenws10g77kn1asndxm1nlvam5].[avg:weeks_course_open_length:qk]&quot;</bucket>
              <bucket>&quot;[vertica.08yenws10g77kn1asndxm1nlvam5].[sum:enrollments_after_start:qk]&quot;</bucket>
              <bucket>&quot;[vertica.08yenws10g77kn1asndxm1nlvam5].[sum:enrollments_at_start:qk]&quot;</bucket>
              <bucket>&quot;[vertica.08yenws10g77kn1asndxm1nlvam5].[sum:sum_enrolls:qk]&quot;</bucket>
              <bucket>&quot;[vertica.08yenws10g77kn1asndxm1nlvam5].[avg:pct_enroll_at_start:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[vertica.08yenws10g77kn1asndxm1nlvam5].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.08yenws10g77kn1asndxm1nlvam5].[:Measure Names]' value='94' />
            <format attr='text-format' field='[vertica.08yenws10g77kn1asndxm1nlvam5].[avg:pct_enroll_at_start:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.08yenws10g77kn1asndxm1nlvam5].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([vertica.08yenws10g77kn1asndxm1nlvam5].[none:pacing_type:nk] / [vertica.08yenws10g77kn1asndxm1nlvam5].[none:level_type:nk])</rows>
        <cols>[vertica.08yenws10g77kn1asndxm1nlvam5].[:Measure Names]</cols>
        <subtotals>
          <column>[vertica.08yenws10g77kn1asndxm1nlvam5].[none:pacing_type:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Enrollments by Course Run Number'>
      <table>
        <view>
          <datasources>
            <datasource caption='Course Open Length' name='vertica.08yenws10g77kn1asndxm1nlvam5' />
          </datasources>
          <datasource-dependencies datasource='vertica.08yenws10g77kn1asndxm1nlvam5'>
            <column datatype='string' name='[course_id]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[course_run_number]' role='dimension' type='ordinal' />
            <column datatype='string' name='[level_type]' role='dimension' type='nominal' />
            <column-instance column='[course_id]' derivation='None' name='[none:course_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[course_run_number]' derivation='None' name='[none:course_run_number:ok]' pivot='key' type='ordinal' />
            <column-instance column='[level_type]' derivation='None' name='[none:level_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[pacing_type]' derivation='None' name='[none:pacing_type:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[pacing_type]' role='dimension' type='nominal' />
            <column-instance column='[sum_enrolls]' derivation='Sum' name='[sum:sum_enrolls:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[sum_enrolls]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.08yenws10g77kn1asndxm1nlvam5].[none:level_type:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:level_type:nk]' />
              <groupfilter function='member' level='[none:level_type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[vertica.08yenws10g77kn1asndxm1nlvam5].[none:level_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[vertica.08yenws10g77kn1asndxm1nlvam5].[sum:sum_enrolls:qk]' field-type='quantitative' max='150000' min='0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[vertica.08yenws10g77kn1asndxm1nlvam5].[sum:sum_enrolls:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.08yenws10g77kn1asndxm1nlvam5].[sum:sum_enrolls:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[vertica.08yenws10g77kn1asndxm1nlvam5].[none:level_type:nk]' />
              <lod column='[vertica.08yenws10g77kn1asndxm1nlvam5].[none:course_id:nk]' />
            </encodings>
            <reference-line axis-column='[vertica.08yenws10g77kn1asndxm1nlvam5].[sum:sum_enrolls:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[vertica.08yenws10g77kn1asndxm1nlvam5].[sum:sum_enrolls:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.08yenws10g77kn1asndxm1nlvam5].[sum:sum_enrolls:qk]</rows>
        <cols>([vertica.08yenws10g77kn1asndxm1nlvam5].[none:pacing_type:nk] / [vertica.08yenws10g77kn1asndxm1nlvam5].[none:course_run_number:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Registrations on course start date vs Enrollments at Start'>
      <table>
        <view>
          <datasources>
            <datasource caption='Added Registrations' name='vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz' />
          </datasources>
          <datasource-dependencies datasource='vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz'>
            <column datatype='integer' name='[cnt_registrations]' role='measure' type='quantitative' />
            <column datatype='string' name='[course_id]' role='dimension' type='nominal' />
            <column datatype='integer' name='[enrollments_at_start]' role='measure' type='quantitative' />
            <column datatype='string' name='[level_type]' role='dimension' type='nominal' />
            <column-instance column='[course_id]' derivation='None' name='[none:course_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[level_type]' derivation='None' name='[none:level_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[pacing_type]' derivation='None' name='[none:pacing_type:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[pacing_type]' role='dimension' type='nominal' />
            <column-instance column='[cnt_registrations]' derivation='Sum' name='[sum:cnt_registrations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[enrollments_at_start]' derivation='Sum' name='[sum:enrollments_at_start:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:level_type:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:level_type:nk]' />
              <groupfilter function='member' level='[none:level_type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:level_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:level_type:nk]' />
              <lod column='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:course_id:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[sum:enrollments_at_start:qk]</rows>
        <cols>([vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:pacing_type:nk] * [vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[sum:cnt_registrations:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Registrations on day of start vs Enrollments'>
      <table>
        <view>
          <datasources>
            <datasource caption='Added Registrations' name='vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz' />
          </datasources>
          <datasource-dependencies datasource='vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz'>
            <column datatype='integer' name='[cnt_registrations]' role='measure' type='quantitative' />
            <column datatype='string' name='[course_id]' role='dimension' type='nominal' />
            <column datatype='string' name='[level_type]' role='dimension' type='nominal' />
            <column-instance column='[course_id]' derivation='None' name='[none:course_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[level_type]' derivation='None' name='[none:level_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[pacing_type]' derivation='None' name='[none:pacing_type:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[pacing_type]' role='dimension' type='nominal' />
            <column-instance column='[cnt_registrations]' derivation='Sum' name='[sum:cnt_registrations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sum_enrolls]' derivation='Sum' name='[sum:sum_enrolls:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[sum_enrolls]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:level_type:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:level_type:nk]' />
              <groupfilter function='member' level='[none:level_type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:level_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:level_type:nk]' />
              <lod column='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:course_id:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[sum:sum_enrolls:qk]</rows>
        <cols>([vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:pacing_type:nk] * [vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[sum:cnt_registrations:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 13'>
      <table>
        <view>
          <datasources>
            <datasource caption='Announcement Window' name='vertica.0u69qg00zc39cf1ds1htn1n2e5rb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Time Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Weeks&quot;'>
              <calculation class='tableau' formula='&quot;Weeks&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.0u69qg00zc39cf1ds1htn1n2e5rb'>
            <column caption='Announcement Window' datatype='integer' name='[Calculation_249386846820065280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Days&quot; THEN SUM([days_announcement_window])&#13;&#10;WHEN &quot;Weeks&quot; THEN SUM([weeks_announcement_window])&#13;&#10;WHEN &quot;Months&quot; THEN SUM([months_announcement_window])&#13;&#10;END)' />
            </column>
            <column datatype='string' name='[course_id]' role='dimension' type='nominal' />
            <column datatype='integer' name='[days_announcement_window]' role='measure' type='quantitative' />
            <column datatype='string' name='[level_type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[months_announcement_window]' role='measure' type='quantitative' />
            <column-instance column='[course_id]' derivation='None' name='[none:course_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[level_type]' derivation='None' name='[none:level_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[pacing_type]' derivation='None' name='[none:pacing_type:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[pacing_type]' role='dimension' type='nominal' />
            <column-instance column='[sum_bookings]' derivation='Sum' name='[sum:sum_bookings:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[sum_bookings]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_249386846820065280]' derivation='User' name='[usr:Calculation_249386846820065280:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[weeks_announcement_window]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:level_type:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:level_type:nk]' />
              <groupfilter function='member' level='[none:level_type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:level_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:level_type:nk]' />
              <lod column='[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:course_id:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[sum:sum_bookings:qk]</rows>
        <cols>([vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:pacing_type:nk] * [vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[usr:Calculation_249386846820065280:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Verification Window vs Enrollments'>
      <table>
        <view>
          <datasources>
            <datasource caption='Added Registrations' name='vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz' />
          </datasources>
          <datasource-dependencies datasource='vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz'>
            <column datatype='string' name='[course_id]' role='dimension' type='nominal' />
            <column datatype='string' name='[level_type]' role='dimension' type='nominal' />
            <column-instance column='[course_id]' derivation='None' name='[none:course_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[level_type]' derivation='None' name='[none:level_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[pacing_type]' derivation='None' name='[none:pacing_type:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[pacing_type]' role='dimension' type='nominal' />
            <column-instance column='[sum_enrolls]' derivation='Sum' name='[sum:sum_enrolls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[verification_window]' derivation='Sum' name='[sum:verification_window:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[sum_enrolls]' role='measure' type='quantitative' />
            <column datatype='integer' name='[verification_window]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:level_type:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:level_type:nk]' />
              <groupfilter function='member' level='[none:level_type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:pacing_type:nk]'>
            <groupfilter function='level-members' level='[none:pacing_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:level_type:nk]</column>
            <column>[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:pacing_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[sum:verification_window:qk]' field-type='quantitative' max='1000' min='0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[sum:verification_window:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[sum:verification_window:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:level_type:nk]' />
              <lod column='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:course_id:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[sum:sum_enrolls:qk]</rows>
        <cols>([vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:pacing_type:nk] * [vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[sum:verification_window:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Verification Window vs Verifications'>
      <table>
        <view>
          <datasources>
            <datasource caption='Added Registrations' name='vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz' />
          </datasources>
          <datasource-dependencies datasource='vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz'>
            <column datatype='string' name='[course_id]' role='dimension' type='nominal' />
            <column datatype='integer' name='[course_open_length]' role='measure' type='quantitative' />
            <column datatype='string' name='[level_type]' role='dimension' type='nominal' />
            <column-instance column='[course_id]' derivation='None' name='[none:course_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[level_type]' derivation='None' name='[none:level_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[pacing_type]' derivation='None' name='[none:pacing_type:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[pacing_type]' role='dimension' type='nominal' />
            <column-instance column='[course_open_length]' derivation='Sum' name='[sum:course_open_length:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sum_verifications]' derivation='Sum' name='[sum:sum_verifications:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[sum_verifications]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:level_type:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:level_type:nk]' />
              <groupfilter function='member' level='[none:level_type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:level_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[sum:course_open_length:qk]' field-type='quantitative' max='300' min='0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[sum:course_open_length:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[sum:course_open_length:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:level_type:nk]' />
              <lod column='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:course_id:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[sum:sum_verifications:qk]</rows>
        <cols>([vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:pacing_type:nk] * [vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[sum:course_open_length:qk])</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Exploratory Data Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='384' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5083' id='3' type='title' w='100000' x='0' y='0' />
            <zone fixed-size='122' h='13486' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='5083' />
            <zone h='81016' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='18569'>
              <flipboard active-id='3' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Self Paced courses tend to have shorter announcement windows' captured-sheet='Announcement Window' id='1' />
                  <story-point caption='Self Paced courses are of course open much longer, however, there is a noticeably difference between Introductory level courses and the more advanced level courses' captured-sheet='Course Open Length' id='2' />
                  <story-point captured-sheet='' id='3' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='80'>
    <window class='worksheet' name='Announcement Window'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='checkdropdown' param='[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:course_partner:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:course_id:nk]</field>
            <field>[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:course_partner:nk]</field>
            <field>[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:level_type:nk]</field>
            <field>[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:pacing_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Course Open Length'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='checkdropdown' param='[vertica.08yenws10g77kn1asndxm1nlvam5].[none:course_partner:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[vertica.08yenws10g77kn1asndxm1nlvam5].[none:course_id:nk]</field>
            <field>[vertica.08yenws10g77kn1asndxm1nlvam5].[none:course_partner:nk]</field>
            <field>[vertica.08yenws10g77kn1asndxm1nlvam5].[none:level_type:nk]</field>
            <field>[vertica.08yenws10g77kn1asndxm1nlvam5].[none:pacing_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Announcement Window to Enrolls'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:pacing_type:nk]' type='shape' />
            <card pane-specification-id='0' param='[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:level_type:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:pacing_type:nk]' type='filter' />
            <card param='[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:level_type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:course_id:nk]</field>
            <field>[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:level_type:nk]</field>
            <field>[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:pacing_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Course Open Length to Enrolls'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[vertica.08yenws10g77kn1asndxm1nlvam5].[none:pacing_type:nk]' type='shape' />
            <card pane-specification-id='0' param='[vertica.08yenws10g77kn1asndxm1nlvam5].[none:level_type:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[vertica.08yenws10g77kn1asndxm1nlvam5].[none:pacing_type:nk]' type='filter' />
            <card param='[vertica.08yenws10g77kn1asndxm1nlvam5].[none:level_type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[vertica.08yenws10g77kn1asndxm1nlvam5].[none:course_id:nk]</field>
            <field>[vertica.08yenws10g77kn1asndxm1nlvam5].[none:level_type:nk]</field>
            <field>[vertica.08yenws10g77kn1asndxm1nlvam5].[none:pacing_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Descriptive Stats'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='211'>
            <card mode='checkdropdown' param='[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:course_partner:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[:Measure Names]</field>
            <field>[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:course_partner:nk]</field>
            <field>[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:level_type:nk]</field>
            <field>[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:pacing_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Descriptive Stats 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[vertica.08yenws10g77kn1asndxm1nlvam5].[none:level_type:nk]</field>
            <field>[vertica.08yenws10g77kn1asndxm1nlvam5].[none:pacing_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Enrollments by Course Run Number'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[vertica.08yenws10g77kn1asndxm1nlvam5].[none:course_id:nk]</field>
            <field>[vertica.08yenws10g77kn1asndxm1nlvam5].[none:course_run_number:ok]</field>
            <field>[vertica.08yenws10g77kn1asndxm1nlvam5].[none:level_type:nk]</field>
            <field>[vertica.08yenws10g77kn1asndxm1nlvam5].[none:pacing_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Registrations on day of start vs Enrollments'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:level_type:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:course_id:nk]</field>
            <field>[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:level_type:nk]</field>
            <field>[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:pacing_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Registrations on course start date vs Enrollments at Start'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:level_type:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:course_id:nk]</field>
            <field>[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:level_type:nk]</field>
            <field>[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:pacing_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Course Verification Window'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:course_id:nk]</field>
            <field>[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:level_type:nk]</field>
            <field>[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:pacing_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Verification Window vs Enrollments'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:level_type:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:pacing_type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:course_id:nk]</field>
            <field>[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:level_type:nk]</field>
            <field>[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:pacing_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='5' />
    </window>
    <window class='worksheet' name='Verification Window vs Verifications'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:level_type:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:course_id:nk]</field>
            <field>[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:level_type:nk]</field>
            <field>[vertica.0vkxnbg0cj3r3g1bv0nqf0ytv0bz].[none:pacing_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:level_type:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:course_id:nk]</field>
            <field>[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:level_type:nk]</field>
            <field>[vertica.0u69qg00zc39cf1ds1htn1n2e5rb].[none:pacing_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Announcement Window' width='192'>
      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
      8O+ubpUgMXn/IAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Course Open Length' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Announcement Window to Enrolls' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Course Open Length to Enrolls' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Descriptive Stats' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Descriptive Stats 2' width='192'>
      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
      3pVd6VNVAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Enrollments by Course Run Number' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Registrations on day of start vs Enrollments' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29d3ge5Znv/5ny9qZuFUuW5N4rxgXTDAaMS4KBUEIgFUgC5Oz5bX6pZ7Pn
      7B42ezZgyhqSkORQQkg2gBvF4AIuuFe5SbZk9S69vU85fxgbCyxbsoyKNZ/r0nXN9b4z37ln
      Xt3zPHM/9/Pcgq7rOgYGgxSxrw0wMOhLDAcwGNTIfW2AgcHlxtveQiSuYzdpJAUbWsyPPxDA
      4kjBbLZiEZMkMJOTlW44gMGVx+FDJVitdhLoBNpbSM0ahpz0UVbVQrrHjCCIJOIKOVnzDAcw
      uPLQNQWbJx2PECc1NQMxGUGxZTI224nVJNLaVIsvqAIgGFEggyuNQCCA2+3u9Pvmhlo0Qaat
      ra3nDhCJRLDb7T2RMDDoVRKJBIIgYDKZjC5Qb3L06BFS3U5kewoRfzvRQAt48rALGqlpHtB1
      fD4f1Q3tFOam4fak4A8nGJqTSTjgo8UfJjvNSZM3SopNJClZifrbycrJ4cD2j8iZMI+CdONh
      1B0MB+hFAkE/ra3tiEI5WiJJUtFINCcY4pFpbamj3q8zb+oI1PhJautVGndsZfy8xQCcOn6I
      uGSjvFIj4GsjOyOVwiFO9pRUI+/bT+6woX18dQMTwwF6kaF5+YCApsbx+4I4nQ4CMRg2xElZ
      RS0TRgyhrsVHbs4wYhE/E6fNIs1tA0DQBWJYGT7UTpvbQYbLTBgTwwuyScscQn1dHR6bqW8v
      cABivAP0cwLeFmrqm7HZXRQMK0A2hi57zLnvAD12gHA43GODNE1DFHv2yxoahsaFOPNvLggC
      qno6BCpJUs+7QIIg9LgFUBQFWe6ZKYaGoXEhNE0DQBTFrkeB/K1NbNlziJx0F6EEmNQIsiOd
      RLgFwZLG3Kun9cgoA4O+5oIO4E7PYogNfIqJFAuAB7QkVSeOM/6axSQSCWKxGGazuUdGnGmS
      DA1D48vSOLcFOKMnCMKFHcDX2oicmsf4DCehuICshjE5MxiSk00insBkNmO1WnvcPAGGhqHx
      pWqc6wCapp3+55flCztAamYOqZk5PTqxgUF/xgiqGQxqDAcwGNQYDmAwqDEcwGBQYziAwaDG
      cACDQc0Fw6CJaIjaFj85qQ58UQ2rkEB2pKIrcTRNIyUlpbfsNDD4UrigA8STGm3VldTXakTi
      OqkOC1BDW2Ml2SOnM8VwAIMBzgUdQI0HkVMzSXibcZhFdB0EAeLJBMGA30iFMDQGjMYlpULo
      SJhRKZ44nnBMwyYmkR2pjB4zGk1VjVQIQ2PAaFxiKkQ2qZnZAHg8535j6ZExBgb9hQEVBdJV
      lXh5Ofqn3mxg0FMGjAPomkbLc88TO3KE1hde7GtzDK4QBowDoGkgCLgXL0aPx/vaGoMrhAHj
      AIIs45h5FS3PPIvz+uv62hyDK4QBtSyKY/ZsHLNn97UZBlcQA6YFMDD4MrhgC9DWXE91o5e8
      DDctwQROWUF2pKMrMRRFpbBwWG/ZaWDwpXDBFiA9Kwcl4OVgaSkCOq3eEI01lWxe9zYRbL1l
      o4HBl8YFW4DKo/tpjmoMSfVQV1+PQzrdAuSPHE/DqeOMyE0xUiEMjQGh0VkqRL9YGrG/LJ5k
      aFy5Gp0tjGW8BBsMagwHMBjUGA5gMKgxHMBgUGM4gMGgxnAAg0GN4QAGg5qLpkLs2V3CNfNn
      8+H6HWS5ZaM+gMEVxQUdwONx40hL4/De/SSVGBZ7nlEfwNAYkBqXNCm+obYOt8vJ2HEzyKuv
      Q4mFjPoAhsaA1LikSfH5w0eT/+n20KFGHVqDKw/jJdhgUGM4gMGgxnAAg0GN4QAGgxrDAQwG
      NYYDGAxqulQfIMNpJqxIRn0AgyuOLtUHcE6aSMXREsxmGaM+gMGVRJfqA8Ra6skuKKatodqo
      D2BoDEiNHtUH0GUrSjLOyOJhRn0AQ2NAavS4PkBHjPoABlcGRhTIYFBjOIDBoMZwAINBjeEA
      BoMawwEMBjWGAxgMarpUHyA3w00wASY1MujrA6ihEKrPh9mYIXdFcEEHSM/KoaKsgpOJGNYz
      H7YHKT20nSnzv/blW9fPULxe2n7/e8z5+cRSUnDfdltfm2TQQ7pUHyDTlCSkfNYCDNb6APG6
      OszjxuG47jp8L7+CXVH6xA5Do/sY9QEug4auafj+/neUxkZS770XOTOzT+wwNLpPZ/UBBlSV
      yL5GEEVS7767r80wuIwYUSCDQY3hAAaDGsMBDAY1hgMYDGoMBzAY1BgOYDCouWAYVImF2Lb3
      CDkpNrwxHYeURHakoyUjJJMakydP7C07DQy+FC7oAIJsxSzp+AN+AjEdyWkHbytH9mxi+sJv
      GZPiDY0Bo3FJk+IlWcbjdiPpSVSThlVSkJ0ZXHXDYmJt1ZgKpxmT4g2NAaFxSZPiAcaNG9ej
      ExsY9GeMl2CDQY3hAAaDGsMBDAY1hgMYDGoMBzAY1BgOYDCoMRzAYFDTYRxA13ViYT/BuEBW
      uod42M+6zbsoyHRjcmXgb6pCdqSTCLcgWNKYe/W0vrLbwOCy0HEgLN7GK2+sZ9KUUWSlT8Pi
      8JCV5iIYChELRElze0BLUnXiOOOvWWykQhgaA0bj4qkQuk5ZeS2TJxTicn1W+WVo3lAsErQE
      49jFJCZnBkNysknEE0Z9AENjwGh0ORUiGg7hSPusJsDQTxeAyszp0fkNDPoln70ECwKjRuST
      wIa3takPTTIw6D06RoFEMyZRZfjwkX1kjoFB79LRAQQTNotEW3t7H5ljYNC7dHQAJUyLL4bd
      bu1kdwODK4uODiDb8bXW09ba1kfmGBj0Lh0dQI2R0E2oWs/jrgYGA4EOYVDBksqD992BJJs4
      WVHB8KIiKk6dorioiPKKckyog74+gMGVxRfGAUwmM+g6kiiSiAQ4WVmD0wwnTtWRleIckPUB
      Qp98QmTHTgSrhYxHHkEQjRQog9N0zAWKe1m7fg+jxo5mdHEhAB6HhWA4SjgUIG5WB2R9gPCO
      naQ//hiBt1cSq6rClJ/fJ3YYGn2n0eVVIT5fLmDW1bMAGDF6/HmFB0IqhGPW1bQ/+xyC1YJ1
      2LALtgD9/VoMjUuja6kQmk59bQWizcHo4oIenbA/4ZwzB+ecOX1thkE/pOOj0GRn9uxZuG2m
      PjLHwKB36dgCiBI2ScScbWS+GQwOOrYAyRAlp1rQ4qE+MufS0HWd0MaNhDZvhk5KniWbW1CM
      FA+Dz3FFFMkLrPsA3WJGiMcRnU6cc+d2tPHAASI7d6InErhvvRXLyPMn+/WXgm6GxuXXGNRF
      8uLHS/EsWoQaDBIrO9GpAxgMPq6IESHXgpshkUC02c4b7fEsXYJ/9RrCW7fiXnBzH1ho0F+5
      YBfoTH2A4UMzqGsN4pCUL9QH6A9dIEPD0LgYl9QFOlMfICc3l8q6EmImsVfrA0R37iK4bRuS
      zUr6ww/DBQaw+suIo6HRPzV6VB9g366dpGYVoodaerU+QHT3bnJ//I/43l6JVt+AubPkO10n
      fvgw0VOn8CxahGAynfOVTnDDBkSzGee8eSAI3bajuxga/U+js5Hgfh0FCm/fTnj7DgSLmYxH
      H+00hSFZX0/76tWk3HQToc2bSf/Wt85+F1i3DtHhRAsFEd3uC44I95fm2tC4/BoDMgrkmD0b
      x+zZl0Hp/D6uJRK0rngBVAXn/PmYJ0y4DOcyGEhcEVEgU04OzlmziZaUkPbAAx2+cy1YgB6L
      IdrtOD/nTPHSUmwTJ5D5xBOEt27rTZMN+gn9ugv0ZWuofj+1P3wM0eMm/eaJWPIdSJPvBunS
      X+r7S5NvaHSksy7QgGsBtGiU1hdfpPX3L6EnEj3SCrz3Hrm//jeyH70fs1gPOZNh1+8vk6UG
      A4F+/Q5wPvyr1+BetAgtEiGw7gM8ixddspZl9Gj8a9Yiqe14xjo7eVMwuJIZcA5gHTOawNq1
      6EkF1y0LeqRlnzoVU14egiwjRipQGw7CzO9eJktBi0Twv/MutimTsRrpF/2SAecAtsmTMeXm
      gigip6f3WM+UlXV6Iy0NPXsKSJfvlrT96U94lizB//ZKTFlZSB7PZdM2uDxc8Nc+Ux8gP8NF
      IAEmNdIv6gPImZnd2n97/Xb2NO5h3tB5TMma8iVZZTAQuaADnKkPoIomnBaAXqwPoOuENm1C
      kE04rp13UY1EUxOKyYScltbh86SWZE/jHh6Z9AjPH3ieCWmdx/ov97C954EHCLzzLvabb0J3
      OFAUpdsal8MOQ+MSUyHgdH0As6gRiAvIarjX6gMEPvgQ2WZDi8aIbd+Bc941nR4bOXiQ4LZt
      iKqK65ZbsY76rL8t6iI6Ouuq1mE32S9q65nvQ9u2Edm9B+f112Gf0r1W4+w53G4y7r2nW8d+
      QaMHGBqf0eX6AJ/nTH2ArB6d/ovouk6ypuZ0d8Z0oTnIX4zNaLEY/rVrsU2ciHX0aOLHj+O+
      /XaEWIx4WVlHBxBEvj/l+1QHq1lYvLBLtmmJBNH9+8l84nFanl7ebQcwGDj02TiA7803ieza
      RcvyZ9Ci0S9877r5JvR4AtFiwXlNxxlebX/6E46ZMwl++CFKayvWCRMIrllDaMsW3OeJDMmi
      TLGnGFHo2uUKsoyuKATWrEG02S7tAg0GBH3mAMnaOjxf/Srm4iLU88zVFQQB103zcV53XYcM
      zvD27UR27yZZWwuaTsvzz5MoL0fTdTK+850OmaAXQotEaH3hRdpe+gN6Mtnx3KJI5g9/iHXC
      BNIf/l7PLrSL6IpCvKIC/dOm2qB36DMHSLlzGS3PPY9otWLKy+vSMbqiENm1m/wVK2h//S84
      59+InJaGe/FiuMCosKIpVPgr0PTP/rn8q1fjWboEx9w5BD788AvHCLKMpbi4V5ZR1FWVluee
      I1ZSQttLL33p5zP4jD5zAPPQoWT96Ak8S5d2/SBRPJ3f/8EHWMeOxTZ+PParrqLlmWexX3vt
      eQ/RdI0VB1ZwpPUIvz/0WZrD6VHgNQTXr8c6alRPL6dH6MkkgsWCe8kStHC4T20ZbAyogTBB
      FMl87IckKitxLzqdAnEmZbqzEKOqqUiCxKLiRTy7/9mzn587Cvz50GlvI1qt2CZOpOWZZ3HN
      n9+ntgw2Bmw2aKKmBt+bb2EpLsKzZMkFNbbXb2dX5RYmHwwy68avYx09+rLZYWgMDI0eZYNG
      gz4amtvxtjQSjMQJBAL4fL4eGdRTfG++SeZjP0QLR0jW15/9XNd1vG/8lebly/GtWgXA7NzZ
      3HfAxZzbv0vwgw9RvN6+Mtugn9EltzpcUoI3rpPqsAA1tDVWkj1yOlNSUi567IVINjbS/vIr
      6LpOxne/063cHlNeHv63V5KoqkRKXYoai+F9/32sY8agtLWR9aMf0bz8mR7ZZ3Dl06Uu0Lat
      W0EQMMkygiBSX1NG2tBxXD11PKFQCLfbfUkn9/3lLzhvvhk1GiW2azeeZXd06/hEdTVyZiai
      zUbbCy/iun0hwbVrEWQTWiyKpagI1+LFwOnBs9C772KZMAFLJy+9qqoiSdIlXYuh0b81zu0C
      JT8Ne3d5TvDUyePxRTRsYhLZkcroMaPRVLXHqRCem2/u2AJ0U0cuLj67LYgisiwjiiKp996D
      nJraYV/d6eDkvELK/Qf5KsVY5fNXwpQ47VjmwsJLDoH2h6F/Q6MjA3JViO6QDIUIvf8+rYUe
      hk65BpvccQS33FfO6vLV3JB/Ax/XfswT0574okYigXfFCizFxSTr6sl49JFu29FfXvoMjY5c
      MVMiO0OwWtkwCUo8QZ7f/zwxJdZ9EUVBkGTcixefNz3D4MrjinEAgPpQPUtHLKXAXYA31jHS
      U5xSzNzcuRxrO8bDkx4++3miqprm5c/gX7MWwWzGNm0qLc88i/PGG3rbfIM+4IrpAimKQkO0
      gZUnVlKUUsSi4q7NFW5evpzMxx7D+9e/Yrv2WmyfZr/2xI7+0OQbGh0ZMAtjJZuaCG3cCJKE
      bdIkrGPGoKNzpPUIJ30nWVi0EHMny5bku/J5bNpj3TqfKScX/8qVJGtqcPYwrGsw8OhXDqBr
      Gu0vvwLo6NEYSnMzclYWrZYEOxp2cEP+Dfzjx//I8JThDHMPY+mIbuQRdULK3XeRrK7GvfB2
      NFO/uh1XJKrfT/trryG5XKTedx/CZYgQ9YT+9Q6g68RPniR68BD6eabB6eikWdN4fNrjVAer
      Pz1Ex/vXv9L67LP4Vq7q9ikFQcA8bBii7fxhUYPLi+/tlaTecw+W0WMI79jR1+Z0rQUoLz1K
      DAt61PuF+gCXk0RlJfarZiA6HPj+9jdMeUMJb9nKkKWLmZUzi8OthxmZOpJn9z1Loafw9EGK
      gtLaSsbjj9P+/H92qq2Gw6heL+Ye9vENeoZl5Aj8q1ej+nyk3HVXX5vTNQeora/D4kw/vfOX
      WR8gLY1kaytWlwu1rZ28F18kuHEjseoaxuSOYUzKmA7Hnc0ATUmh9ZlnMBUWdsgK1SIRNJ8P
      0emk9cXfYirIR/Z4cN12Wwed6PbtBHfsQLBYyXzkwnUIunwtPeBK1rBefTXSsGGINhuix9Ol
      hQK+zEnxXYoCnTp5nGZfDIeURHZmoCkxYpEoU6dPI3qZo0BqMEjTv/0ay/DhhDZtwjp+HJlP
      PHHRqYmfjxQoXi81Dz+MFo7gvOEGrGNG47rpJtr+8Acyf/CDDsc2L3+GrB89ge/NN7HPnIk5
      P/+yXIuh0X80ehQFKhoxhqIenb7riA4HkseDe+FtJKqryXziCQSzmXh5OeaiorPpCTvqd/DR
      +7/Danfx3dEPYpk4qYNO4J13Sbv/61hGjcT7lzfQolHafvs7Us6zSoP9qhk0P/U0utmMp4uz
      05ojzZhEE6nW1IvvbNBv6VfjAKqmUhWoIi9mI7LpY1w334SUlkbLc89hKSoiUVNL5g++D8Cz
      u5/m3u0S2xYWkP/6Zib/7N87PCUi+w/Q8MtfIIgCuT/+Lta5i+DMpHhdJ1pSQryiAs/tt5+d
      R9zVJ82+pn3sa95HTImxsGghxSmf5ST1lyeeodGRfpkKoes6iepqtGgUXddZcXAFh0o389LJ
      104ntGVkgKYBAu7Fi9Hj8bPHzsybxUuOfZSvf5v89OFf0LZPnULBH/9A3tIsZKUONv/H2e8S
      dXVEdu3GNn48Ta/8ief2PcfTe5/mUMuhLtl9wnuC24tv58aCGznpO9nj+2DQd/RpENb35psI
      QLSsjIwfPU68vJy5LWN4SS4hllmKdfRoBFnGMXPm6fSE669DaWkBUWRW7myufmgmicpKzEVF
      qOesprC9fju7Gnch+wI85PcTKFHweMo536t6mbeM8RkLuXbotTy9+2lOBU8xKXMSI1M7X8x2
      8fDFvHr0VcySma+P+/rlvzEGvUafdoEa/vmfUVOcvJlSjm3kKIpDdkrEembbxjG2zYpnyZIO
      +0cPHiS8fTt6UkFKS0VpbEJKScFxzVzk4cPPdqOe3PUkP7v6Z7y184/MUJPkVZag5czFcuP9
      p4XO6QLZbl3A7479AUVTOOk9yU+u/gmry1dz/9j7SbFcfGQ4UVmJb+UqLCNH4Ln99n7T5Bsa
      Hel3qRC6qoKiss5Uhr+slFkLHqTJW8MDmzWQ/Lgf/MoXjokdL8W9aBHNeoA/rv4V2ESWlWaS
      FY3gTktDzEhnxYEVFLgK+G8f/TeGnQwys8RJfTBG/ot3fiYkCNgmTcI26fSL82NTH4N4kJd2
      /nu3r8O3ciXRh76CumoD9qYmhMuwYrVB79F37wCiiJiRzhGbl/gQD/+x5z8YkzOJlGXLSLnj
      DgSzmZgS460Tb1HaXgqAZ8liAmvWsuq3P2bJHoEbN7Syb4SA6vMR3LABJRJGEAQeGPcARZ4i
      Uk0eVj40gq1X2VCamjq3JeqFj/6NhyxDKfnon1kwbAFu1UzrCy/Q9ocvLpx1Lu8XeNn00q94
      ofavKE5jNHmg0WcOsKtxF2/M1Yi7LSzOXcAYWxFDK8NUf/s7tDz7HLHSUl4+8jIzhsxgQ/UG
      vDEvos1G+ne+zZxkAe/c6GL9LCvTKyUSp06hNjZR/71HmeoYw/959REmHgzSHmvnno9Uak0h
      TEOHkqiq+kKev65pBN9+lcChZpScm1mQTKdIT8e/ajWepUtxzJ5NcP2GDsdousb6qvVsq9tG
      w1A7bSMyCM8YTYBLmINg0Kd0qQukxAKsXb+DLLd8WeoDqJrKrsZdPD79R/yq/nFODU/lgc0x
      Gn7zczxLlxDZt494aSmcry62KJLWHOPBfR7ix+ow5QWJHS/FdvUspNRUJlbDxJw7cd1wA5W/
      +wFvXC8xznMnvr//HUGSiJ84SeaPnkC0nn5ax0+cQHMX4x7uwPfkHTD9myiv/Rk5Jxv/2rXo
      sTjuhR0X1f2g8gNSLCl4416Otx9nWsE0xE9zkwwGFl1ygL1795NUYljseZelPoCu6+iazpqT
      a3A1Blk89irCyfeIpqcTr6sndvgImT//Ofe5ZrF652tcN/kWXLILRVHQVRUpPR3B5UKLxVDy
      s3krqxxh3wvcbZtH9FAJ8bJSAmvfYdnty3DmFyGVvIHvcAnalHsQhwwh3tqKKTsbACEjg+jb
      K1EK8gklZpB1yx1ofj+Jyiqcc+eCLCOlpXUYslc1FVVT0TSNbHs2uY5cokoUp+zstykIg12j
      R6kQoFNbW4cSC2FyZqArMRLxBEXDiy85FSKSjLDi4Apuy72J7K1lOCZNQrBYaH3hBRwzZ+K6
      5RbefPLbWNOzuG7ULXg+Xd0BoP3111FbW9E1nTdr1jL5lI689DbKqvayZOY3iB44iK6qCGYz
      Q6ZFSYx+iOiLPyCq5KNJqeT+67+cvipNI7hhIygK1okTwOMh8NprCGYzad/4RqcL7Wq6xsbq
      jdhkG3Ny51AdrGaIfQhW2dpvoh6GRkc6iwL1WRj0d4d+x62Ft/JOxTssG7GMLOdnFQjUcJh1
      +/+GsmU7KTkxcqMORjyyAgSBmmAN646vYdbmZrJduRy3eNl2+B3M8+Zg+mQ/bZkWiMV5YPp3
      cZRUMuTGDJJNLXgPvotr6TOEt+5Abz6BXS5FdxfC5K+RqKoifvQYlhnTOT4zi72Ne7k2/1om
      Z06+6HVsrd7Mlvd/j6d4NI/M/xmaqvWLH9zQ6Ei/GAnWdR3v3/5G8/LlJDZ9xJC9rzKlbBOC
      +lmUJVFXR8tTTxHauAl71RZOle7jY45C+UYUTeGFAy9ww4gFHBtxiowbChlx54M47/8ao7LG
      c3z+cLKL7NxoamH37udJe+DraNO+wSuRcj44FuKZV5/AlJeHXTyK6R/eYLP/E/5Y9p/s3v4W
      7tsXokRD7KvewQ+n/pCPaj7q0jXtOvQeP/nOy6TbM6lvq/xS7pvBl0evOEBdqI7n9j3HmhOr
      UJqayPrRj/iWI5P3j5YjV7qw/ddTNC9/hqZf/zunln6FQOkR/EqQ6hSFLM3B2JNxGkIN+N96
      i0R1NaY//5q6lmr0ZJSdW59k2chlfBDYQUq9j4K9n/CUWWSUOUrg3fdQNZWmo5Us+urP0IcX
      0PQv/0qkrJGqlx+l0G7nPtNN7HW3k6yvR6msQVESrK1Yi7bvMM3LnyFy4MAFr22KYxS/ef8X
      NFYcJseZ2xu30+Ay0isO8FbZW3x/6veJ60maHSrNy5cTPNLC7TmZTClw4dtWhn3GdLx//St5
      T/2Gv6eWM6FO5ETQjBYJ0ixEOdqeILJhE3duinOsYicLPg7S/tKL5JSsx7ntebK9MO3vR8ny
      6/xyZxsjwqdHcdtj7fivnchPTvyG8auPnF7tYfo3cdV6+NA5gpcL6pmbMxv7jBm4rr2We4+l
      MXRzGfd6R5H5xOOENm46nbNUVYUW+2KYc2qTje9Ep3NP3VCEL3xr0N+RfvWrX/2qJwLJZBLT
      Raqy1IXqKG0vpcJfwa23fh/P7GuIHKmm/Z1PCJS0UK1rJLftQNZFYocOcdgTZML0W6hoOILu
      GkaDN8zisV8luncflflmdrbXkKYFGZ4N8chwgrHtTN4eIPVAEFOlGWdUpMZeyFNXNfMfO39N
      UZuEMKIIky6hHTiCs7oV64QZTLaMZPSGk+TmjkL1+tC8Xjw330x6ZgGBd95BAPRojERFBUpj
      I4H33sM+Y0aHeazB9etJe+ih0y1TXh6C3Y7Yw6IamqYZGpdZ48yrriAIqKqKIAhIktQ7DjAm
      bQxOk5MbCm7AKllp/+OfCG3ejHP+LbwjnSB82xw+tlVy4yP/gnqigkk509h4/B3Gn4hz1O6j
      ptjJ9shhrmpx8U5yP9dXOthwVQ7VkTauSQ8gjppPIjXO61I7uXE7bW4HB6a4qcrUkU1mEjYT
      Jd6jmBXw5bsZHnVhs7kgmcQyZizJ2hoC77+Hefx44gcPkqyvZ8iPf4xot+OafyPtr7yK5ElB
      CwWxjhmD5HSevTZTdjbtL7+CKS8X+9Sp/eYHNzQ60pkD9GoUKNnYSPv/fZnQxx9jmzSJeEU5
      f5mt8Z20xaysf4/pbW4KJ87FlJdH+yuvoJtN/GTMQe486mbbTdlc80mAV0c2klTitLsFrq92
      ckeOmQ+0Jia3JRl+YCy/mFvLsjCEXFZW5TkRW3y0WZLY3anMCeVwXGzi5+/a8YgOcv7pp4T+
      ZRnIFtrLnAgpqQx/+20i+/cT2bkLwSQjpWcQ/GAdkstNoqqKYa+8jHSB5VPOjVgoZes4uPs/
      yU8fS9YtT342H+Ei9JfISXc0NDVJtOSvYE/HPvJWhE/ruvWXa+ksCtSlFiDQ3kJ7MI4S8aMI
      JuLRCNFoFKvV2qUW4Az+VatIvetOEEViRw7jXrSI8fc9yhvBjWRnFTOmNEJo/QYkpwt0iB87
      jmPuHF5PPU4szYEsSsSjIYR4koRZ5ESGwvZkjHsbAwScAgfFOGJOiAazgq7HyUZgZOZsLPVt
      jJ90Iw2JChbU1qKnZNESryP92CY2iTJ1yRjDnQKqnoaUmUWspATnddcSWLMWpbUFPRbHNf9G
      kjU1uG+77ewocmc3+szTqnHbU4y88xWiTYeQnFnI9gskyqlJaC8HWyqarveLpySCwN8AABEN
      SURBVGZ3NIJ7fo/uzkNtL0dXY5hShnWq0RhuRNXVThco7okdndGjLlAsqVJ69Aj+YJDW5mbK
      Du9FMaeSnZnadQfQdZSWVlqeehrRZsOc5ST0/lqcUgrzbv0eGX9ZT3jLVtSMFP6sbOOwXkOF
      JUCF2kS9WyU/tZBy/ynapCiNqTqqBNcdE0iTE7jTc6hscJCe00SrLBE2CeiCik10kJaoZkmt
      l3CgnDHeGlKk6YzXN5HIGEK9VEFWLIJlmJW2eg27VyLjW99E8nhofeFFrOPGkXrP11AaGxEd
      DlLvvw/zRaZMnvtjNQSqUPf+X5qCtWRMvh9Z7OQppqnw0f8GNQEnPkTLv3rAOUCsYhu+VetI
      lh/BNn4m5vSi82p8Uv8Juxp3saNhB/nOfNyWiy+t/2U6QJfaFX9LPdkFxbQ1VCMIEE8mCAb8
      3UqFUJqaiJaVkvHTnxB+7TfY3e2kP3YtdS/8DvuSxQipaaiBABtGRrEk4OMRERzTcskNmRFS
      IrQpAbIVDS0KwYDIiSEaZUM0Hq+LMCPSSCBm4c9mO+tcNm4ORVkYCZMIyWT7E/zTSDtPtXmp
      1JN86D6GRzGx3uRmIhZKRxRiqvdyYKzKT4vuQyosRCosJGfiRPyv/Znw9u24vnY3oXffJXLs
      WIcl2c/HucP2RVO/S83wGorsWUjIna+AkIwiiGb0ccsQP/rXfpM+0B2N+HEbKTfNIdkWIXlK
      RSlSzqtR1l7GwsKFVPgrqPBVMMQ25LLa0Rk9SIXQqa+uJJgUyHJbkR2p6EocTVXxpKZ2ORUi
      2dSE/+2VuBbcTOSFH7At4OfwSIn5moth9tuxT55E7WOPs/4qEx8XxfDbdUIWHU0UmBpOJy1d
      YLivjpGpxaw5dYo71siczBfIntWGiI5Z06k3ybziduGTJL7uC/Jfspv/P9JOtq6Q2QYRC+z2
      mCk+ZSGYrpF33MS+yXFcCY3qcApJUyY/+IfXz+YJnaH56eV4vrKU0IaNIIBj3ryzlSUv24SY
      E+uhZjuMXogyZHK/6Dd3RyNeUXF6hp8okv697yG5XOfVCMQD/Pn4n3GZXNwz5p7OW8VLtKMz
      +j4VQteJHjlC4FgJW0bFCX78JPMKbuAHseM8eXgSo26/l1df/CF7prlA1/AVppMsP8UdW1Xe
      uF7kj0etNC69j0/eXUG6JYGn3kTLcIUsU5yRcpy4IJCqqryY6mGKP0mlXSI7qnHSKuMQNYqS
      CnEBfLJIQrAyRlVR2pMoJzxsmZDg3moLWwtH8th/f/1sHz/Z3Iwgy7Q89TSR/ftR2loZ9sor
      BNetI+2BB5BSUmh++mnk2+bz213PkTVuGvdNegibuWfV5fvLi+NA06gKVLG7cTcLChfgNnfs
      WvWLVAiANcomrBt/Q5Wg8oGWgk23kjfvFvY89QucEyby89Iws/RKrj5xEL9V5ZMpZlJ9KvVt
      Lk7tXo5nlImAI5/6KXG2pJoZLceoMskkBVAFgRHxJPlSgrAs8HqGgw0OB/tiThy6RoMk41B1
      MmJxVmoWJIdGRpaf21pjLM/TuH5NNbXf/wFV33iQpndX8fSLD/HcMw8QPHyInP/1P7FPmYLm
      93e4nupwLd9eeT/HK3ZyuPlgl1MorjR0VSXw3vunlzvs2TP1kogkI6w6uYrZubN5+cjLXT6u
      1xwg2dxMeOs25mjtmPZmMdwvsaXpPRIBH/9736/Z9PAMPgruo9zZyAqPmwxBQRFhf04ck6Lz
      8MJmNo2ZzZ9NNvY42lAFnex2Ha8o0SRJBEURRYD50QjoMCGWYEYszg/bffgs8D8y0/jAZecN
      j5NCLcH3BQjLEj8d7eHJIjcJEVaPj+JevAh9dBG/2PYLfOkWrr3rCbZnePH++XWU1lZipWW4
      brnlbCj03fQ6pqlxlope0soPMtxxvkkMXz5qMEiirq5Pzg3gX70aOSuTZH090UNdW12jP9Ar
      A2EAWjhM/Phx7K21rBp2mGI9zMymGAGXBUvcRVZJPbFoiHiWyvxwlFpZ5qTZjCKLjA44iKsJ
      KrRmIpYE04kQF0UEh8rvHKm0WkQyVZWALlFtkpmUSOCXRN7wuLghHmWyFmNCPMHoRJLx8SQ5
      mkKVmGREMk6NReYmNcwIMUGZycxNVYc5Gd7KjiFuTqpNlFS8z/XFZmLBvYRvXIzjUBWxksPY
      Jk5EdDjYWPJ3booep8YmsagtSIZ0DbZRna8o0RmhLVvwvb0S0W5HyszsVtQj7G1h+ZqfsqNt
      L86wRnbuyF6PAkWPHCHyyXYSpyqxjh+PKSfnvBq6qhJctw6lvf10RE24eAJJV+wwSSayHdns
      aNjBslHLsEiWDt93FgXqtRZAzspCT8Spryzh4QoRW9zNPxeksehkK02WFhwFbRRENXapHv7P
      EA9r7Q6y23TsUY39GWEiVrg1EeJ39S1UyzLZSYUNLhvz1RAPBoKMSSSZkYwxKZHgZ5npVJhM
      vFzfxMRYnExNZWwiwT6rhRqTzJRYnFvDEdolicnJOM+mpuDVJa53BQn5cgmGUhhOK6IO10Uj
      NBTein/ZP1C9/4+Uf2Ua5uHFnLrrbqoffgRTUzsFfo2hJ2RMgoK58LMWILRlC81PPU3ri79F
      P2fZls+jxWJU7PyQj27Noea9t7p9b4/6jjPR6+D+U7l84t17Sb9PT9HCEXz5KUQLMtGCoU73
      869ahTxkCMnaWqIlhy+rDcPcw7hr1F1f6P9fiF5zgOCGDdgmTUTPs/NS0k1+3MeKsjbiPhv3
      SwIzNjm52uEnJijktYEtAd5UnXsSAVbs8fM/t0cwx2CH08IDwSCZqAxVFB73+rg+EmVSPI5L
      03BpGg/6A6SrKhmqigjkJRWsus7/1+5lSShMmyRRYjYzMxZjfiTKi03NLFGCqE0mTFfJ2NIb
      mKzHSLpVNtgtpB54nazj6/AVz6Ji2/v818k3iU8oxjJ8ONesqeWUYqGlUCFeayJRUXH2mpt3
      b+X9+R6O00iyoaHTe6NIsNp8lEn7vLyZUdntezsy5GJP4x7+EP6AqVU9Kyd6qRweIfNB61b+
      EthIa56jT2y4FHp3WRRBoigxlAeG+nD72jCN+wrDTuygWjJjvWYu1NRyfb1Ijt3PW5l2piaj
      7E/aSZkUJC0RZRpQq8mkqBoJSWBFUwsuTT97IZKuY1NVXDENi66jA5mfxnzNuoQqQL0sMSke
      J+1T50hTVaKCgE8SEXPj7Dl4kN3FFrZLNpYFg/zR6SYr5VHqryrGEWljzZ7XmBI38U+Oncw8
      uoNpssi2oJviZgV9rxn1us9qk71TXMGcP/2WLTlWRrseJrOz+yKK2K++Gpt9IrZ4uNu31RSO
      8e3ETGyjJ5Koqur28ZeD6lSVu+/6H1TFG6m1RijsbMebruGZf7+XlOxhfHfp4s726jW60QLo
      VJWXUtfYSm1tLZWV3bvRrvnz0ZUkSsFCkrs8CGoevhNmxPzJ5KcsZshVQ0if83UesteT6Urw
      dd3PQaeZGaYIM6JxRmpJ5kRi3BUK0SRLFCeTuDUNFTqkIQuATdcROV3zV/z0L1XTSFc1bopE
      iQkCTbJMkyxTK8vkKwoqAg5FJ5L0MCWU4BohTJ0oM/+gTlWuiRnvV1K5cz0T9Fxiw3PJduQw
      M3MGv79F4J5DKbQpMm1OAc4p6DyvuZpY7p1MDduwRNo6vTdmycw94+9np7mWByd8s1v3FcA2
      ZQqS2030wEE8d3Sv2PjlYumIpbzt30yZWs+snFmd7vfWvld5YNHPGVc0k+3lm3rRwvPT9RZA
      h1ZvCNqDlB7azpT5X+vWiQRBwDV/PgDp3/42eKtw738F0qejjL8TOdyE8/CdVOUNJR5upiiq
      otgz2Z9hpyxUweNeH8cstzBUOIbppJ9woUKTJJGpqsQFAcunLzk60PLp5wlBICmAQ9PxiyIa
      4NA1JB0SgoAKKLpAmdlEmdlE1kkbsSToe92MMSt8PMyMWxApfv5dUp5+geJaMw3lB/nYt49J
      x3xs1hoYnzeSjQUnaMk0k9KYgvuWBWevOa/Nzar4W0wPqdgU5xdvyjnkOnO5e/TdAJ2PGHeC
      aLWS/ctfduuYy43b7ObRyY9edL9CxcMHyYO0q/Us06b0gmUXpusDYbrOJ1s2ITvSiYfbSKgy
      8+bOIhQKEYlEsFqtRKNRBEHo9rYsy0jhJpz7f0uy5SRqop5vyhokbPxSuIv382v5etN+PDXV
      6COm82LcwY2lhxiSl0lDJMiIZBWpUpykJBDQJERJJ6bbCJnieFSN42YzrZKEqMGwRmhIA0WQ
      GFUisy9LYIfLwkSfhMM6jCXXfJvk5MlIe/bQ/sqryC4n9vvvp3X/AURVQf/KdbhS8gmsfRPJ
      ZMW98A5aN69G3X+C9KlXId94I4qiIIoiloYGlDf/iDzharSbbyMej5/OP5HlC24DWCyWLu9/
      vu1IJILZbO7wuSRJJBKJDtuyLJ8dHPr8tqZpaJp2wX0utn1mwOnM5zLgO7AVmysVecQEksnk
      6YrtgvCF7TPRxVgshvXM4OQ5n3dnW9M0FEXBbDaj6/rZbNX+szy6JEH9AWg+ij7xLmoijaTr
      DkyBCOb8fHQlgVZ7GDF/EiCcXRRXEEUaQw3sKH2P+WouluyxmG0x9PQRVNcdIVUJsSHZwBh5
      KIVBK9EDBwhPGo5j7DhcAQXV7yfutuJL+MlJLcTsPP+T+syosJyWdvFrGUCjp4NFo+9TIS5A
      f7lJhsaVq9FvUiEMDPoThgMYDGoMBzAY1BgOYDCoMRzAYFBjOIDBoKbHYdBwuPu5K58nHo9j
      sVguvqOhYWhcImfmAUuS1GG7x8lwgiD0eBzAbDZ3eWkVQ8PQuBTO/afv9rpAFyKZTOJva6K2
      2Us0HCLo82JzeZC6MNFB1zVKDu5DV5OoooXmllZS3K5unb+pphzd7OTYoUPougaSSEt7ALez
      6055RuP44RKS8QSiWaLVG+qyhqbGKTl4EEwWTpaWns79F6HNG8bl7Nr8YE35VEO2UH6ijGQ8
      jigJtPmjuBxd1FATHD50EMls5URpGbqmogs67YFuaCifaZw8cYJkPI4ggjcYw2nveg00b1Md
      gbjCybKTaKoCuoo3nOiWRntjLcF4kvIT5SQTcQRBwxdO4rR3rTWIBds5XHoKmSTVDe0k4xGi
      QT+CxY4Sbqe+LXB50qGrak8XoDvVUI4jazR5BV2bFqgrYSor6xASYd7fepD77lpy8YM6COhU
      nzhKWkJHl0R27TlIVBC5c/Gt3dDQqDpxjCGCmZpGH4lwkE8OHWNZNzREyUJxQTZ7D+zFmZrB
      7r2HiAkiyxbd0nUN2ULh0CEcLi2hPQTxoJ8dJaXccfuCix981g4zGR4Lhw/sx5WSwt79h4gh
      8dXuaMhm0t1myo4exhfViQXa2XVY4SsLb+6yhq6pHD2wD82dgd1s4cDBEmLIfOW2m7qhoXBk
      /z4smTm0+xPEAm3sCaksXdh1jea6KrwhjVgsjEkSqTlRhSW1kDmZQ6isqCIoiJfnJVhGIRBN
      YE/JRoy1EUl2PvvpXATBREF+Ng1NzUyeMJrDx7pZdV0QyMzMxGR3UVNZhcdpY/zIQo6X13ZD
      QyQzMwPJ6iE33Uxza4BxI4dRWtH1+bVKPMjaD7dRVDyMmqoa3E4b44bnU3qqvusasQDvbtjO
      sKIRZHlEWr1hxhbncaKy84k0n0dT4rS0hzCZZWpr6nA6bIwpyuVkVWOXNVQlRos3jGxzkW7X
      afPHGF2YTXn1Bapsfo5kLISigaLq1NbV47DZGFWQRXltc5c1EtEQqi6gSHY8liRtgQQjC7Ko
      qG3pskZKVi5y/PT6VW3BGHZXJg5CBKJJLA4TMUXvH7lABga9iZELZGDwKf8PsYAB6NtPlR4A
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Registrations on course start date vs Enrollments at Start' width='192'>
      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
      RC6QQHCc/w/ZwM8HYAVrdAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Course Verification Window' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Verification Window vs Enrollments' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Verification Window vs Verifications' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 13' width='192'>
      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
      3jrhWrNEaAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
